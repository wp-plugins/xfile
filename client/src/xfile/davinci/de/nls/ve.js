//>>built
define("davinci/de/nls/ve",{root:{loading:"Loading...",colorPicker:"Color picker....",stateLabel:"State",valueIsOverriden:"This value is overriden and can not be changed.",removeValue:"Remove Value",okToProceed:"OK to proceed with this change?",applyToWhich:"Apply to which style rule:",background:"Background",noSelection:"(no selection)",propChangeCannotComplete:"This property change cannot be completed because the operation attempts to modify a read-only theme CSS file.",fontsAndText:"Fonts and Text",
chooseDeviceSilhouette:"Choose a device silhouette: ",newRule:"[class: ${0} - New rule in ${1}] ",insteadOfChanging:"Instead of changing the theme CSS files, it is usually better to add a class to this widget (at the top of the Properties palette) and then open up the CSS Details pane to target a style rule within your app.css file, as described at ${0}.",layout:"Layout",createNewState:"Create New State",selectColor:"select a color",createLabel:"Create",showMinMax:"show min/max",events:"Events",creatingStyleRules:"Creating Style Rules with app.css",
common:"Common",onlyApplyToState:" Only apply to current state (${0})",widgetSpecific:"Widget-specific",changeWillModify:"This change will modify one of the CSS style rules defined within a 'CSS theme' and will therefore probably impact other widgets on a global basis.",stateNameExists:"State name '${name}' already exists. Please enter a different state name.",existingRule:"[class: ${0} - Existing rule in ${1}] ",toolBarClass:"class: ",propUndefined:"undefined",showtrbl:"show t/r/b/l",border:"Border",
line:" line: ${0})",showDetails:"show details",toChangeProperty:"To change this property, one technique is to add a class to this widget (at top of Properties palette)  and then open up the CSS Details pane to target a style rule within your app.css file, as described at ${0}.",enterStateName:"Please enter a state name.",toolBarFor:"for: ",errorModifyingValue:"Error modifying value",htmlMarkup:"HTML markup",smartInputHelp1:"If you use any markup characters (\x26lt;,\x26gt;,\x26amp;), you need to specify whether the text represents literal (plain) text or HTML markup that should be parsed (using an innerHTML assignment).",
smartInputHelp2:"Text represents literal (plain) text.",paddingMargins:"Padding/Margins",richTextInputHelp:"Provides Rich Text (word processor-like) editing of HTML."}});
//# sourceMappingURL=ve.js.map