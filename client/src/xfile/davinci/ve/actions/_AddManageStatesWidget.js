//>>built
require({cache:{"url:davinci/ve/actions/templates/AddState.html":'\x3cdiv\x3e\n\t\x3cdiv class\x3d"dijitDialogPaneContentArea"\x3e\n\t\t\x3cdiv class\x3d\'addStateNameDiv\'\x3e\n\t\t\t\x3clabel\x3e${veNls.stateLabel}:\x3c/label\x3e\x3cinput dojoAttachPoint\x3d"input" dojoType\x3d"dijit.form.TextBox" dojoAttachEvent\x3d"onKeyUp:_onKeyPress" type\x3d"text"\x3e\x3c/input\x3e\n\t\t\x3c/div\x3e\n\t\x3c/div\x3e\n\t\x3cdiv class\x3d"dijitDialogPaneActionBar"\x3e\n\t\t\x3cbutton dojoType\x3d\'dijit.form.Button\' dojoAttachPoint\x3d"okButton" dojoAttachEvent\x3d\'onClick:onOk\' label\x3d\'${veNls.createLabel}\' class\x3d"maqPrimaryButton" type\x3d"submit"\x3e\x3c/button\x3e\n\t\t\x3cbutton dojoType\x3d\'dijit.form.Button\' dojoAttachEvent\x3d\'onClick:onCancel\' label\x3d\'${commonNls.buttonCancel}\' class\x3d"maqSecondaryButton"\x3e\x3c/button\x3e\n\t\x3c/div\x3e\n\x3c/div\x3e\n'}});
define("davinci/ve/actions/_AddManageStatesWidget","dojo/_base/declare dojo/dom-style dojo/_base/event dijit/_WidgetBase dijit/_TemplatedMixin dijit/_WidgetsInTemplateMixin davinci/Runtime davinci/Workbench davinci/workbench/Preferences davinci/ve/States davinci/commands/CompoundCommand davinci/ve/commands/StyleCommand davinci/ve/commands/AppStateCommand davinci/actions/Action dojo/i18n!davinci/ve/nls/ve dojo/i18n!dijit/nls/common dojo/text!./templates/AddState.html dijit/form/TextBox dijit/form/Select dijit/form/CheckBox dijit/form/Button".split(" "),
function(f,g,r,h,k,l,b,s,t,e,m,u,n,v,c,p,q,w,x,y,z){return f("davinci.ve.actions._AddManageStatesWidget",[h,k,l],{templateString:q,widgetsInTemplate:!0,veNls:c,commonNls:p,_isValid:function(){var a=this.domNode.querySelector(".addStateNameDiv");if(a&&"none"==g.get(a,"display"))return!0;if(a=this.input.get("value")){if(davinci.ve.states.hasState(this.node,a))return alert(dojo.string.substitute(c.stateNameExists,{name:a})),!1}else return!1;return!0},_onKeyPress:function(a){a.keyCode!=dojo.keys.ENTER&&
(this._isValid()?this.okButton.set("disabled",!1):this.okButton.set("disabled",!0))},onOk:function(){var a;if(b.currentEditor&&b.currentEditor.currentEditor&&b.currentEditor.currentEditor.context){if(a=b.currentEditor.currentEditor.context,(a=e.getFocus(a.rootNode))&&a.stateContainerNode){e.getState(a.stateContainerNode);var d=this.input.get("value");if(d)if(b.currentEditor&&b.currentEditor.currentEditor&&b.currentEditor.currentEditor.context){a=b.currentEditor.currentEditor.context;var c=new m;d&&
c.add(new n({action:"add",state:d,stateContainerNode:this.node,context:a}));a.getCommandStack().execute(c)}else console.error("AddState.js - cannot determine context.")}}else console.error("_AddManageStatesWidget.js (from "+this._calledBy+" - cannot determine context.")},onCancel:function(){this.onClose()}})});
//# sourceMappingURL=_AddManageStatesWidget.js.map